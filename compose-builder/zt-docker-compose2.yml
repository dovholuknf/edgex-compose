name: edgex
networks:
  default:
    name: edgex_default
  edgex-network:
    driver: bridge
    name: edgex_edgex-network
services:
  app-rules-engine:
    command: /app-service-configurable -cp=consul.http://edgex-core-consul:8500 --registry
    container_name: edgex-app-rules-engine
    depends_on:
      consul:
        condition: service_started
        required: true
      core-common-config-bootstrapper:
        condition: service_started
        required: true
      core-metadata:
        condition: service_started
        required: true
      security-bootstrapper:
        condition: service_started
        required: true
    entrypoint:
      - /edgex-init/ready_to_run_wait_install.sh
    env_file:
      - path: /home/cd/git/github/dovholuknf/edgex/edgex-compose/compose-builder/common-non-security.env
        required: true
      - path: /home/cd/git/github/dovholuknf/edgex/edgex-compose/compose-builder/common-security.env
        required: true
      - path: /home/cd/git/github/dovholuknf/edgex/edgex-compose/compose-builder/common-sec-stage-gate.env
        required: true
    environment:
      EDGEX_PROFILE: rules-engine
      SERVICE_HOST: edgex-app-rules-engine
    hostname: edgex-app-rules-engine
    image: nexus3.edgexfoundry.org:10004/app-service-configurable:latest
    networks:
      edgex-network: null
    read_only: true
    restart: always
    security_opt:
      - no-new-privileges:true
    user: 2002:2001
    volumes:
      - bind:
          create_host_path: true
        read_only: true
        source: /etc/localtime
        target: /etc/localtime
        type: bind
      - read_only: true
        source: edgex-init
        target: /edgex-init
        type: volume
        volume: {}
      - bind:
          create_host_path: true
          selinux: z
        read_only: true
        source: /tmp/edgex/secrets/app-rules-engine
        target: /tmp/edgex/secrets/app-rules-engine
        type: bind
  consul:
    command: agent -ui -bootstrap -server -client 0.0.0.0
    container_name: edgex-core-consul
    depends_on:
      security-bootstrapper:
        condition: service_started
        required: true
      vault:
        condition: service_started
        required: true
    entrypoint:
      - /edgex-init/consul_wait_install.sh
    env_file:
      - path: /home/cd/git/github/dovholuknf/edgex/edgex-compose/compose-builder/common-security.env
        required: true
      - path: /home/cd/git/github/dovholuknf/edgex/edgex-compose/compose-builder/common-sec-stage-gate.env
        required: true
    environment:
      EDGEX_GROUP: "2001"
      EDGEX_USER: "2002"
      STAGEGATE_REGISTRY_ACL_BOOTSTRAPTOKENPATH: /tmp/edgex/secrets/consul-acl-token/bootstrap_token.json
      STAGEGATE_REGISTRY_ACL_MANAGEMENTTOKENPATH: /tmp/edgex/secrets/consul-acl-token/mgmt_token.json
      STAGEGATE_REGISTRY_ACL_SENTINELFILEPATH: /consul/config/consul_acl_done
    hostname: edgex-core-consul
    image: hashicorp/consul:1.16
    networks:
      edgex-network: null
    read_only: true
    restart: always
    security_opt:
      - no-new-privileges:true
    user: root:root
    volumes:
      - source: consul-config
        target: /consul/config
        type: volume
        volume: {}
      - source: consul-data
        target: /consul/data
        type: volume
        volume: {}
      - read_only: true
        source: edgex-init
        target: /edgex-init
        type: volume
        volume: {}
      - bind:
          create_host_path: true
          selinux: z
        read_only: true
        source: /tmp/edgex/secrets/edgex-consul
        target: /tmp/edgex/secrets/edgex-consul
        type: bind
      - source: consul-acl-token
        target: /tmp/edgex/secrets/consul-acl-token
        type: volume
        volume: {}
  core-command:
    command: /core-command -cp=consul.http://edgex-core-consul:8500 --registry
    container_name: edgex-core-command
    depends_on:
      consul:
        condition: service_started
        required: true
      core-common-config-bootstrapper:
        condition: service_started
        required: true
      core-metadata:
        condition: service_started
        required: true
      database:
        condition: service_started
        required: true
      security-bootstrapper:
        condition: service_started
        required: true
      security-secretstore-setup:
        condition: service_started
        required: true
    entrypoint:
      - /edgex-init/ready_to_run_wait_install.sh
    env_file:
      - path: /home/cd/git/github/dovholuknf/edgex/edgex-compose/compose-builder/common-non-security.env
        required: true
      - path: /home/cd/git/github/dovholuknf/edgex/edgex-compose/compose-builder/common-security.env
        required: true
      - path: /home/cd/git/github/dovholuknf/edgex/edgex-compose/compose-builder/common-sec-stage-gate.env
        required: true
    environment:
      EXTERNALMQTT_URL: tcp://edgex-mqtt-broker:1883
      SERVICE_HOST: edgex-core-command
    hostname: edgex-core-command
    image: nexus3.edgexfoundry.org:10004/core-command:latest
    networks:
      edgex-network: null
    read_only: true
    restart: always
    security_opt:
      - no-new-privileges:true
    user: 2002:2001
    volumes:
      - bind:
          create_host_path: true
        read_only: true
        source: /etc/localtime
        target: /etc/localtime
        type: bind
      - read_only: true
        source: edgex-init
        target: /edgex-init
        type: volume
        volume: {}
      - bind:
          create_host_path: true
          selinux: z
        read_only: true
        source: /tmp/edgex/secrets/core-command
        target: /tmp/edgex/secrets/core-command
        type: bind
  core-common-config-bootstrapper:
    command:
      - /entrypoint.sh
      - /core-common-config-bootstrapper
      - -cp=consul.http://edgex-core-consul:8500
    container_name: edgex-core-common-config-bootstrapper
    depends_on:
      consul:
        condition: service_started
        required: true
      security-bootstrapper:
        condition: service_started
        required: true
      security-secretstore-setup:
        condition: service_started
        required: true
    entrypoint:
      - /edgex-init/ready_to_run_wait_install.sh
    env_file:
      - path: /home/cd/git/github/dovholuknf/edgex/edgex-compose/compose-builder/common-non-security.env
        required: true
      - path: /home/cd/git/github/dovholuknf/edgex/edgex-compose/compose-builder/common-security.env
        required: true
      - path: /home/cd/git/github/dovholuknf/edgex/edgex-compose/compose-builder/common-sec-stage-gate.env
        required: true
    environment:
      ALL_SERVICES_DATABASE_HOST: edgex-redis
      ALL_SERVICES_MESSAGEBUS_HOST: edgex-redis
      ALL_SERVICES_REGISTRY_HOST: edgex-core-consul
      APP_SERVICES_CLIENTS_CORE_METADATA_HOST: edgex-core-metadata
      DEVICE_SERVICES_CLIENTS_CORE_METADATA_HOST: edgex-core-metadata
    hostname: edgex-core-common-config-bootstrapper
    image: nexus3.edgexfoundry.org:10004/core-common-config-bootstrapper:latest
    networks:
      edgex-network: null
    read_only: true
    security_opt:
      - no-new-privileges:true
    user: 2002:2001
    volumes:
      - bind:
          create_host_path: true
        read_only: true
        source: /etc/localtime
        target: /etc/localtime
        type: bind
      - read_only: true
        source: edgex-init
        target: /edgex-init
        type: volume
        volume: {}
      - bind:
          create_host_path: true
          selinux: z
        read_only: true
        source: /tmp/edgex/secrets/core-common-config-bootstrapper
        target: /tmp/edgex/secrets/core-common-config-bootstrapper
        type: bind
  core-data:
    command: /core-data -cp=consul.http://edgex-core-consul:8500 --registry
    container_name: edgex-core-data
    depends_on:
      consul:
        condition: service_started
        required: true
      core-common-config-bootstrapper:
        condition: service_started
        required: true
      database:
        condition: service_started
        required: true
      security-bootstrapper:
        condition: service_started
        required: true
      security-secretstore-setup:
        condition: service_started
        required: true
    entrypoint:
      - /edgex-init/ready_to_run_wait_install.sh
    env_file:
      - path: /home/cd/git/github/dovholuknf/edgex/edgex-compose/compose-builder/common-non-security.env
        required: true
      - path: /home/cd/git/github/dovholuknf/edgex/edgex-compose/compose-builder/common-security.env
        required: true
      - path: /home/cd/git/github/dovholuknf/edgex/edgex-compose/compose-builder/common-sec-stage-gate.env
        required: true
    environment:
      SERVICE_HOST: edgex-core-data
    hostname: edgex-core-data
    image: nexus3.edgexfoundry.org:10004/core-data:latest
    networks:
      edgex-network: null
    read_only: true
    restart: always
    security_opt:
      - no-new-privileges:true
    user: 2002:2001
    volumes:
      - bind:
          create_host_path: true
        read_only: true
        source: /etc/localtime
        target: /etc/localtime
        type: bind
      - read_only: true
        source: edgex-init
        target: /edgex-init
        type: volume
        volume: {}
      - bind:
          create_host_path: true
          selinux: z
        read_only: true
        source: /tmp/edgex/secrets/core-data
        target: /tmp/edgex/secrets/core-data
        type: bind
  core-metadata:
    command: /core-metadata -cp=consul.http://edgex-core-consul:8500 --registry
    container_name: edgex-core-metadata
    depends_on:
      consul:
        condition: service_started
        required: true
      database:
        condition: service_started
        required: true
      security-bootstrapper:
        condition: service_started
        required: true
      security-secretstore-setup:
        condition: service_started
        required: true
    entrypoint:
      - /edgex-init/ready_to_run_wait_install.sh
    env_file:
      - path: /home/cd/git/github/dovholuknf/edgex/edgex-compose/compose-builder/common-non-security.env
        required: true
      - path: /home/cd/git/github/dovholuknf/edgex/edgex-compose/compose-builder/common-security.env
        required: true
      - path: /home/cd/git/github/dovholuknf/edgex/edgex-compose/compose-builder/common-sec-stage-gate.env
        required: true
    environment:
      SERVICE_HOST: edgex-core-metadata
    hostname: edgex-core-metadata
    image: nexus3.edgexfoundry.org:10004/core-metadata:latest
    networks:
      edgex-network: null
    read_only: true
    restart: always
    security_opt:
      - no-new-privileges:true
    user: 2002:2001
    volumes:
      - bind:
          create_host_path: true
        read_only: true
        source: /etc/localtime
        target: /etc/localtime
        type: bind
      - read_only: true
        source: edgex-init
        target: /edgex-init
        type: volume
        volume: {}
      - bind:
          create_host_path: true
          selinux: z
        read_only: true
        source: /tmp/edgex/secrets/core-metadata
        target: /tmp/edgex/secrets/core-metadata
        type: bind
  database:
    container_name: edgex-redis
    depends_on:
      security-bootstrapper:
        condition: service_started
        required: true
      security-secretstore-setup:
        condition: service_started
        required: true
    entrypoint:
      - /edgex-init/redis_wait_install.sh
    env_file:
      - path: /home/cd/git/github/dovholuknf/edgex/edgex-compose/compose-builder/common-security.env
        required: true
      - path: /home/cd/git/github/dovholuknf/edgex/edgex-compose/compose-builder/common-sec-stage-gate.env
        required: true
    environment:
      DATABASECONFIG_NAME: redis.conf
      DATABASECONFIG_PATH: /run/redis/conf
    hostname: edgex-redis
    image: redis:7.0-alpine
    networks:
      edgex-network: null
    read_only: true
    restart: always
    security_opt:
      - no-new-privileges:true
    tmpfs:
      - /run
    user: root:root
    volumes:
      - source: db-data
        target: /data
        type: volume
        volume: {}
      - read_only: true
        source: edgex-init
        target: /edgex-init
        type: volume
        volume: {}
      - source: redis-config
        target: /run/redis/conf
        type: volume
        volume: {}
      - bind:
          create_host_path: true
          selinux: z
        read_only: true
        source: /tmp/edgex/secrets/security-bootstrapper-redis
        target: /tmp/edgex/secrets/security-bootstrapper-redis
        type: bind
  openziti:
    command: -- edge quickstart
    container_name: edgex-openziti
    depends_on:
      openziti-initialize:
        condition: service_completed_successfully
        required: true
    entrypoint:
      - bash
      - -euc
      - |
        ZITI_CMD+=" --ctrl-address openziti"\
        " --ctrl-port 1280"\
        " --router-address openziti"\
        " --router-port 3022"\
        " --username admin"\
        " --password admin"\
        " --home /edgex_openziti"
        exec ziti "$${@}" $${ZITI_CMD}
    environment:
      HOME: /edgex_openziti
      PFXLOG_NO_JSON: "true"
    image: openziti/ziti-cli:0.34.1
    networks:
      edgex-network:
        aliases:
          - openziti
          - ziti-controller
          - ziti-edge-controller
          - ziti-router
    ports:
      - host_ip: 0.0.0.0
        mode: ingress
        protocol: tcp
        published: "1280"
        target: 1280
      - host_ip: 0.0.0.0
        mode: ingress
        protocol: tcp
        published: "3022"
        target: 3022
    restart: unless-stopped
    user: 2002:2001
    volumes:
      - source: edgex_openziti
        target: /edgex_openziti
        type: volume
        volume: {}
  openziti-configure:
    build:
      context: /home/cd/git/github/dovholuknf/edgex/edgex-compose/compose-builder
      dockerfile: openziti-init.Dockerfile
    container_name: edgex-openziti-configure
    environment:
      - ZITI_USER=admin
      - ZITI_PWD=admin
      - OPENZITI_PERSISTENCE_PATH=/edgex_openziti
      - OPENZITI_ADVERTISED_ADDRESS=openziti
      - OPENZITI_ADVERTISED_PORT=1280
    networks:
      edgex-network: null
    user: root
    volumes:
      - source: edgex_openziti
        target: /edgex_openziti
        type: volume
        volume: {}
  openziti-initialize:
    command: chown -Rc 2002:2001 /edgex_openziti
    container_name: edgex-openziti-initialize
    environment:
      HOME: /edgex_openziti
      PFXLOG_NO_JSON: "true"
    image: busybox
    networks:
      default: null
    user: root
    volumes:
      - source: edgex_openziti
        target: /edgex_openziti
        type: volume
        volume: {}
  openziti-underlay-proxy:
    command: |
      sh -c " while [ ! -f /edgex_openziti/healthcheck.json ]; do
        sleep 1
        echo 'waiting for /edgex_openziti/healthcheck.json...'
      done && /app/zerotrust-healthcheck"
    container_name: edgex-underlay-proxy
    environment:
      HOME: /edgex_openziti
      OPENZITI_HEALTHCHECK_ALLOWED_PATH: ^.*/ping$$
      OPENZITI_HEALTHCHECK_IDENTITY: /edgex_openziti/healthcheck.json
      OPENZITI_HEALTHCHECK_PROXY_PORT: 80
      OPENZITI_HEALTHCHECK_REPLACE_REGEX: edgex.$$1
      OPENZITI_HEALTHCHECK_SEARCH_REGEX: (.*).edgex.ziti
    image: ghcr.io/openziti-test-kitchen/healthcheck-proxy/healthcheck-proxy:latest
    networks:
      edgex-network:
        aliases:
          - app-external-mqtt-trigger.edgex.ziti
          - app-http-export.edgex.ziti
          - app-metrics-influxdb.edgex.ziti
          - app-mqtt-export.edgex.ziti
          - app-rfid-llrp-inventory.edgex.ziti
          - app-rules-engine.edgex.ziti
          - app-sample.edgex.ziti
          - core-command.edgex.ziti
          - core-data.edgex.ziti
          - core-metadata.edgex.ziti
          - rules-engine.edgex.ziti
          - support-notifications.edgex.ziti
          - support-scheduler.edgex.ziti
          - device-bacnet-ip.edgex.ziti
          - device-coap.edgex.ziti
          - device-gpio.edgex.ziti
          - device-modbus.edgex.ziti
          - device-mqtt.edgex.ziti
          - device-onvif-camera.edgex.ziti
          - device-rest.edgex.ziti
          - device-rfid-llrp.edgex.ziti
          - device-snmp.edgex.ziti
          - device-uart.edgex.ziti
          - device-usb-camera.edgex.ziti
          - device-virtual.edgex.ziti
    restart: unless-stopped
    volumes:
      - source: edgex_openziti
        target: /edgex_openziti
        type: volume
        volume: {}
  rules-engine:
    container_name: edgex-kuiper
    depends_on:
      database:
        condition: service_started
        required: true
      security-bootstrapper:
        condition: service_started
        required: true
      security-secretstore-setup:
        condition: service_started
        required: true
    entrypoint:
      - /edgex-init/kuiper_wait_install.sh
    env_file:
      - path: /home/cd/git/github/dovholuknf/edgex/edgex-compose/compose-builder/common-sec-stage-gate.env
        required: true
    environment:
      CONNECTION__EDGEX__REDISMSGBUS__PORT: 6379
      CONNECTION__EDGEX__REDISMSGBUS__PROTOCOL: redis
      CONNECTION__EDGEX__REDISMSGBUS__SERVER: edgex-redis
      CONNECTION__EDGEX__REDISMSGBUS__TYPE: redis
      EDGEX__DEFAULT__PORT: 6379
      EDGEX__DEFAULT__PROTOCOL: redis
      EDGEX__DEFAULT__SERVER: edgex-redis
      EDGEX__DEFAULT__TOPIC: edgex/rules-events
      EDGEX__DEFAULT__TYPE: redis
      KUIPER__BASIC__CONSOLELOG: "true"
      KUIPER__BASIC__RESTPORT: 59720
    hostname: edgex-kuiper
    image: lfedge/ekuiper:1.12-alpine
    networks:
      edgex-network: null
    read_only: true
    restart: always
    security_opt:
      - no-new-privileges:true
    user: kuiper:kuiper
    volumes:
      - bind:
          create_host_path: true
        read_only: true
        source: /etc/localtime
        target: /etc/localtime
        type: bind
      - source: kuiper-data
        target: /kuiper/data
        type: volume
        volume: {}
      - source: kuiper-etc
        target: /kuiper/etc
        type: volume
        volume: {}
      - source: kuiper-log
        target: /kuiper/log
        type: volume
        volume: {}
      - source: kuiper-plugins
        target: /kuiper/plugins
        type: volume
        volume: {}
      - source: kuiper-sources
        target: /kuiper/etc/sources
        type: volume
        volume: {}
      - source: kuiper-connections
        target: /kuiper/etc/connections
        type: volume
        volume: {}
      - read_only: true
        source: edgex-init
        target: /edgex-init
        type: volume
        volume: {}
  security-bootstrapper:
    container_name: edgex-security-bootstrapper
    env_file:
      - path: /home/cd/git/github/dovholuknf/edgex/edgex-compose/compose-builder/common-sec-stage-gate.env
        required: true
    environment:
      EDGEX_GROUP: "2001"
      EDGEX_USER: "2002"
    hostname: edgex-security-bootstrapper
    image: nexus3.edgexfoundry.org:10004/security-bootstrapper:latest
    networks:
      edgex-network: null
    read_only: true
    restart: always
    security_opt:
      - no-new-privileges:true
    user: root:root
    volumes:
      - bind:
          create_host_path: true
        read_only: true
        source: /etc/localtime
        target: /etc/localtime
        type: bind
      - source: edgex-init
        target: /edgex-init
        type: volume
        volume: {}
  security-secretstore-setup:
    container_name: edgex-security-secretstore-setup
    depends_on:
      security-bootstrapper:
        condition: service_started
        required: true
      vault:
        condition: service_started
        required: true
    env_file:
      - path: /home/cd/git/github/dovholuknf/edgex/edgex-compose/compose-builder/common-security.env
        required: true
      - path: /home/cd/git/github/dovholuknf/edgex/edgex-compose/compose-builder/common-sec-stage-gate.env
        required: true
    environment:
      - EDGEX_GROUP=2001
      - EDGEX_USER=2002
      - SECUREMESSAGEBUS_TYPE=redis
    hostname: edgex-security-secretstore-setup
    image: nexus3.edgexfoundry.org:10004/security-secretstore-setup:latest
    networks:
      edgex-network: null
    read_only: true
    restart: always
    security_opt:
      - no-new-privileges:true
    tmpfs:
      - /run
      - /vault
    user: root:root
    volumes:
      - bind:
          create_host_path: true
        read_only: true
        source: /etc/localtime
        target: /etc/localtime
        type: bind
      - read_only: true
        source: edgex-init
        target: /edgex-init
        type: volume
        volume: {}
      - source: vault-config
        target: /vault/config
        type: volume
        volume: {}
      - bind:
          create_host_path: true
          selinux: z
        source: /tmp/edgex/secrets
        target: /tmp/edgex/secrets
        type: bind
      - source: kuiper-sources
        target: /tmp/kuiper
        type: volume
        volume: {}
      - source: kuiper-connections
        target: /tmp/kuiper-connections
        type: volume
        volume: {}
  support-notifications:
    command: /support-notifications -cp=consul.http://edgex-core-consul:8500 --registry
    container_name: edgex-support-notifications
    depends_on:
      consul:
        condition: service_started
        required: true
      core-common-config-bootstrapper:
        condition: service_started
        required: true
      database:
        condition: service_started
        required: true
      security-bootstrapper:
        condition: service_started
        required: true
      security-secretstore-setup:
        condition: service_started
        required: true
    entrypoint:
      - /edgex-init/ready_to_run_wait_install.sh
    env_file:
      - path: /home/cd/git/github/dovholuknf/edgex/edgex-compose/compose-builder/common-non-security.env
        required: true
      - path: /home/cd/git/github/dovholuknf/edgex/edgex-compose/compose-builder/common-security.env
        required: true
      - path: /home/cd/git/github/dovholuknf/edgex/edgex-compose/compose-builder/common-sec-stage-gate.env
        required: true
    environment:
      SERVICE_HOST: edgex-support-notifications
    hostname: edgex-support-notifications
    image: nexus3.edgexfoundry.org:10004/support-notifications:latest
    networks:
      edgex-network: null
    read_only: true
    restart: always
    security_opt:
      - no-new-privileges:true
    user: 2002:2001
    volumes:
      - bind:
          create_host_path: true
        read_only: true
        source: /etc/localtime
        target: /etc/localtime
        type: bind
      - read_only: true
        source: edgex-init
        target: /edgex-init
        type: volume
        volume: {}
      - bind:
          create_host_path: true
          selinux: z
        read_only: true
        source: /tmp/edgex/secrets/support-notifications
        target: /tmp/edgex/secrets/support-notifications
        type: bind
  support-scheduler:
    command: /support-scheduler -cp=consul.http://edgex-core-consul:8500 --registry
    container_name: edgex-support-scheduler
    depends_on:
      consul:
        condition: service_started
        required: true
      core-common-config-bootstrapper:
        condition: service_started
        required: true
      database:
        condition: service_started
        required: true
      security-bootstrapper:
        condition: service_started
        required: true
      security-secretstore-setup:
        condition: service_started
        required: true
    entrypoint:
      - /edgex-init/ready_to_run_wait_install.sh
    env_file:
      - path: /home/cd/git/github/dovholuknf/edgex/edgex-compose/compose-builder/common-non-security.env
        required: true
      - path: /home/cd/git/github/dovholuknf/edgex/edgex-compose/compose-builder/common-security.env
        required: true
      - path: /home/cd/git/github/dovholuknf/edgex/edgex-compose/compose-builder/common-sec-stage-gate.env
        required: true
    environment:
      INTERVALACTIONS_SCRUBAGED_HOST: edgex-core-data
      INTERVALACTIONS_SCRUBPUSHED_HOST: edgex-core-data
      SERVICE_HOST: edgex-support-scheduler
    hostname: edgex-support-scheduler
    image: nexus3.edgexfoundry.org:10004/support-scheduler:latest
    networks:
      edgex-network: null
    read_only: true
    restart: always
    security_opt:
      - no-new-privileges:true
    user: 2002:2001
    volumes:
      - bind:
          create_host_path: true
        read_only: true
        source: /etc/localtime
        target: /etc/localtime
        type: bind
      - read_only: true
        source: edgex-init
        target: /edgex-init
        type: volume
        volume: {}
      - bind:
          create_host_path: true
          selinux: z
        read_only: true
        source: /tmp/edgex/secrets/support-scheduler
        target: /tmp/edgex/secrets/support-scheduler
        type: bind
  ui:
    container_name: edgex-ui-go
    environment:
      - EDGEX_SECURITY_SECRET_STORE=true
      - SERVICE_HOST=edgex-ui-go
    hostname: edgex-ui-go
    image: nexus3.edgexfoundry.org:10004/edgex-ui:latest
    networks:
      edgex-network: null
    read_only: true
    restart: always
    security_opt:
      - no-new-privileges:true
    user: 2002:2001
    volumes:
      - bind:
          create_host_path: true
        read_only: true
        source: /etc/localtime
        target: /etc/localtime
        type: bind
  vault:
    cap_add:
      - IPC_LOCK
    command: server
    container_name: edgex-vault
    depends_on:
      security-bootstrapper:
        condition: service_started
        required: true
    entrypoint:
      - /edgex-init/vault_wait_install.sh
    env_file:
      - path: /home/cd/git/github/dovholuknf/edgex/edgex-compose/compose-builder/common-sec-stage-gate.env
        required: true
    environment:
      VAULT_ADDR: http://edgex-vault:8200
      VAULT_CONFIG_DIR: /vault/config
      VAULT_UI: "true"
    hostname: edgex-vault
    image: hashicorp/vault:1.14
    networks:
      edgex-network: null
    restart: always
    tmpfs:
      - /vault/config
    user: root:root
    volumes:
      - read_only: true
        source: edgex-init
        target: /edgex-init
        type: volume
        volume: {}
      - source: vault-file
        target: /vault/file
        type: volume
        volume: {}
      - source: vault-logs
        target: /vault/logs
        type: volume
        volume: {}
version: "3.7"
volumes:
  consul-acl-token:
    name: edgex_consul-acl-token
  consul-config:
    name: edgex_consul-config
  consul-data:
    name: edgex_consul-data
  db-data:
    name: edgex_db-data
  edgex-init:
    name: edgex_edgex-init
  edgex_openziti:
    driver: local
    name: edgex_edgex_openziti
  kuiper-connections:
    name: edgex_kuiper-connections
  kuiper-data:
    name: edgex_kuiper-data
  kuiper-etc:
    name: edgex_kuiper-etc
  kuiper-log:
    name: edgex_kuiper-log
  kuiper-plugins:
    name: edgex_kuiper-plugins
  kuiper-sources:
    name: edgex_kuiper-sources
  nginx-templates:
    name: edgex_nginx-templates
  nginx-tls:
    name: edgex_nginx-tls
  redis-config:
    name: edgex_redis-config
  vault-config:
    name: edgex_vault-config
  vault-file:
    name: edgex_vault-file
  vault-logs:
    name: edgex_vault-logs
