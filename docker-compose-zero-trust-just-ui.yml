#  * Copyright 2024 Intel Corporation.
#  *
#  * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
#  * in compliance with the License. You may obtain a copy of the License at
#  *
#  * http://www.apache.org/licenses/LICENSE-2.0
#  *
#  * Unless required by applicable law or agreed to in writing, software distributed under the License
#  * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
#  * or implied. See the License for the specific language governing permissions and limitations under
#  * the License.
#  *
#  * EdgeX Foundry, Odessa WIP release
#  *******************************************************************************/
#
#
#
# ************************ This is a generated compose file ****************************
#
# DO NOT MAKE CHANGES that are intended to be permanent to EdgeX edgex-compose repo.
#
# Permanent changes can be made to the source compose files located in the compose-builder folder
# at the top level of the edgex-compose repo.
#
# From the compose-builder folder use `make build` to regenerate all standard compose files variations
#
# Generated with: Docker Compose version v2.25.0
name: edgex
services:
  
  ui:
    env_file:
      - .env
    command:
      - ./edgex-ui-server
      - --configDir=res/docker
    container_name: edgex-ui-go
    #    depends_on:
    #      consul:
    #        condition: service_started
    #        required: true
    #      core-common-config-bootstrapper:
    #        condition: service_started
    #        required: true
    #      core-metadata:
    #        condition: service_started
    #        required: true
    #      security-bootstrapper:
    #        condition: service_started
    #        required: true
    entrypoint:
      - /edgex-init/ready_to_run_wait_install.sh
    environment:
      CLIENTS_CORE_COMMAND_HOST: core-command.edgex.ziti
      CLIENTS_CORE_COMMAND_PORT: "80"
      CLIENTS_CORE_COMMAND_SECURITYOPTIONS_MODE: zerotrust
      CLIENTS_CORE_COMMAND_SECURITYOPTIONS_OPENZITICONTROLLER: ${OPENZITI_ADVERTISED_ADDRESS:-openziti7}
      CLIENTS_CORE_DATA_HOST: core-data.edgex.ziti
      CLIENTS_CORE_DATA_PORT: "80"
      CLIENTS_CORE_DATA_SECURITYOPTIONS_MODE: zerotrust
      CLIENTS_CORE_DATA_SECURITYOPTIONS_OPENZITICONTROLLER: ${OPENZITI_ADVERTISED_ADDRESS:-openziti8}
      CLIENTS_CORE_METADATA_HOST: core-metadata.edgex.ziti
      CLIENTS_CORE_METADATA_PORT: "80"
      CLIENTS_CORE_METADATA_SECURITYOPTIONS_MODE: zerotrust
      CLIENTS_CORE_METADATA_SECURITYOPTIONS_OPENZITICONTROLLER: ${OPENZITI_ADVERTISED_ADDRESS:-openziti9}
      CLIENTS_RULES_ENGINE_HOST: rules-engine.edgex.ziti
      CLIENTS_RULES_ENGINE_PORT: "80"
      CLIENTS_RULES_ENGINE_SECURITYOPTIONS_MODE: zerotrust
      CLIENTS_RULES_ENGINE_SECURITYOPTIONS_OPENZITICONTROLLER: ${OPENZITI_ADVERTISED_ADDRESS:-openzitia}
      CLIENTS_SUPPORT_NOTIFICATIONS_HOST: support-notifications.edgex.ziti
      CLIENTS_SUPPORT_NOTIFICATIONS_PORT: "80"
      CLIENTS_SUPPORT_NOTIFICATIONS_SECURITYOPTIONS_MODE: zerotrust
      CLIENTS_SUPPORT_NOTIFICATIONS_SECURITYOPTIONS_OPENZITICONTROLLER: ${OPENZITI_ADVERTISED_ADDRESS:-openzitib}
      CLIENTS_SUPPORT_SCHEDULER_HOST: support-scheduler.edgex.ziti
      CLIENTS_SUPPORT_SCHEDULER_PORT: "80"
      CLIENTS_SUPPORT_SCHEDULER_SECURITYOPTIONS_MODE: zerotrust
      CLIENTS_SUPPORT_SCHEDULER_SECURITYOPTIONS_OPENZITICONTROLLER: ${OPENZITI_ADVERTISED_ADDRESS:-openzitic}
      EDGEX_SECURITY_SECRET_STORE: "true"
      PROXY_SETUP_HOST: edgex-security-proxy-setup
      SECRETSTORE_HOST: edgex-vault
      SERVICE_HOST: edgex-ui-go
      STAGEGATE_BOOTSTRAPPER_HOST: edgex-security-bootstrapper
      STAGEGATE_BOOTSTRAPPER_STARTPORT: "54321"
      STAGEGATE_DATABASE_HOST: edgex-redis
      STAGEGATE_DATABASE_PORT: "6379"
      STAGEGATE_DATABASE_READYPORT: "6379"
      STAGEGATE_PROXYSETUP_READYPORT: "54325"
      STAGEGATE_READY_TORUNPORT: "54329"
      STAGEGATE_REGISTRY_HOST: edgex-core-consul
      STAGEGATE_REGISTRY_PORT: "8500"
      STAGEGATE_REGISTRY_READYPORT: "54324"
      STAGEGATE_SECRETSTORESETUP_HOST: edgex-security-secretstore-setup
      STAGEGATE_SECRETSTORESETUP_TOKENS_READYPORT: "54322"
      STAGEGATE_WAITFOR_TIMEOUT: 60s
      VAULT_ADDR: http://edgex-vault:8200
    hostname: edgex-ui-go
    image: nexus3.edgexfoundry.org:10004/edgex-ui:latest
    networks:
      edgex-network: null
    ports:
      - mode: ingress
        target: 4000
        published: "4000"
        protocol: tcp
    read_only: true
    restart: always
    security_opt:
      - no-new-privileges:true
    user: 2002:2001
    volumes:
      - type: bind
        source: /etc/localtime
        target: /etc/localtime
        read_only: true
        bind:
          create_host_path: true
      - type: volume
        source: edgex-init
        target: /edgex-init
        volume: { }
      - type: bind
        source: /tmp/edgex/secrets/ui
        target: /tmp/edgex/secrets/ui
        read_only: true
        bind:
          selinux: z
          create_host_path: true
          
  
  
  
networks:
  edgex-network:
    name: edgex_edgex-network
    driver: bridge
volumes:
  consul-acl-token:
    name: edgex_consul-acl-token
  consul-config:
    name: edgex_consul-config
  consul-data:
    name: edgex_consul-data
  db-data:
    name: edgex_db-data
  edgex-init:
    name: edgex_edgex-init
  kuiper-connections:
    name: edgex_kuiper-connections
  kuiper-data:
    name: edgex_kuiper-data
  kuiper-etc:
    name: edgex_kuiper-etc
  kuiper-log:
    name: edgex_kuiper-log
  kuiper-plugins:
    name: edgex_kuiper-plugins
  kuiper-sources:
    name: edgex_kuiper-sources
  redis-config:
    name: edgex_redis-config
  vault-config:
    name: edgex_vault-config
  vault-file:
    name: edgex_vault-file
  vault-logs:
    name: edgex_vault-logs
